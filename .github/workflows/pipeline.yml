name: Pipeline

on: [push, pull_request]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        os: [ ubuntu-20.04 ]
    name: Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint
        uses: psf/black@stable
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        os: [ ubuntu-20.04, windows-2019 ]
    name: Test
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv==2020.11.15
          pipenv install --dev
      - name: Test
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          PY_VERSION=`echo ${{ matrix.python-version }} | tr -d "."`
          pipenv run tox -e "py${PY_VERSION}" -or -p auto
      - name: Test
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          $PY_VERSION = "py${{ matrix.python-version }}" -replace "[.]", ""
          pipenv run tox -e $PY_VERSION -or -p auto
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        os: [ ubuntu-20.04 ]
    name: Build
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv==2020.11.15
          pipenv install --dev
      - name: Build
        run: |
          pipenv run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            dist/*.tar.gz
            dist/*.whl
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        os: [ ubuntu-20.04 ]
    if: startsWith(github.ref, 'refs/tags/')
    name: Release
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: dist/
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv==2020.11.15
          pipenv install --dev
      - name: Release
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pipenv run release